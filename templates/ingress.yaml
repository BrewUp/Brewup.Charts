apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.global.namespaceOverride | default .Release.Namespace }}-ingress
  namespace: {{ .Values.global.namespaceOverride | default .Release.Namespace }}
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    cert-manager.io/cluster-issuer: letsencrypt-staging
    cert-manager.io/acme-challenge-type: http01
spec:
  ingressClassName: nginx
  rules:
    - host: {{ .Values.warehouse.ingress.host | default .Release.Name | default .Values.global.namespaceOverride | default .Release.Namespace }}
      http:
        paths:
          - path: /(.*)
            pathType: Prefix
            backend:
              service:
                name: {{.Release.Name}}-{{ .Values.warehouse.name }}
                port:
                  number: {{ .Values.warehouse.service.port }}
    - host: {{ .Values.sales.ingress.host | default .Release.Name | default .Values.global.namespaceOverride | default .Release.Namespace }}
      http:
        paths:
          - path: /(.*)
            pathType: Prefix
            backend:
              service:
                name: {{.Release.Name}}-{{ .Values.sales.name }}
                port:
                  number: {{ .Values.sales.service.port }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
      - {{ .Values.sales.ingress.host | default .Release.Name | default .Values.global.namespaceOverride | default .Release.Namespace }}
      secretName: {{ .Values.sales.name }}-tls
    - hosts:
      - {{ .Values.warehouse.ingress.host | default .Release.Name | default .Values.global.namespaceOverride | default .Release.Namespace }}
      secretName: {{ .Values.warehouse.name }}-tls
  {{- end }}
            